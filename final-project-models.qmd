---
title: "final project"
format: pdf
---

```{r, message=FALSE}
library(dplyr)
library(tidyr)
library(readr)
library(lubridate)
library(readxl)
library(ggplot2)
library(knitr)
```


```{r, message = FALSE}
url1 <- "MTA_Daily_Ridership_Data__Beginning_2020.csv"
df <- read_csv(url1)

```


```{r}
url2 <- "weather_nyc_2021_2022.xlsx"
weather_df <- read_excel(url2)
```


```{r}
weather_df <-
  weather_df %>%
  select('datetime', 'tempmax', 'tempmin', 'temp', 'precip', 'snow', 
         'snowdepth', 'windspeed', 'conditions', 'icon')
```


```{r}
# subways data frame 
sub_df <-
  df %>%
  # selecting relevant variables
  select('Date', 'Subways: Total Estimated Ridership', 
         'Subways: % of Comparable Pre-Pandemic Day') %>%
  na.omit %>%
  # filtering out any dates in the years 2020 and 2023
  filter(!grepl("2023$", Date),
         !grepl("2020$", Date)) %>%
  # mutating date to convert is from a "char" data type
  # creating a new variable that assigns each date their proper day of the week
  mutate("Date" = mdy(Date),
         "Day of Week" = weekdays(Date)) %>%
  select('Day of Week', 'Date', 'Subways: Total Estimated Ridership',
         'Subways: % of Comparable Pre-Pandemic Day')


# joining the weather and subway data frames
sub_df <-
  sub_df %>%
  # joining by the 'date' and 'datetime' variables
  full_join(weather_df, by = c("Date" = "datetime")) %>%
    mutate(Date = as.Date(Date))

```


```{r}
# buses data frame
bus_df <-
  df %>%
  # selecting relevant variables
  select('Date', 'Buses: Total Estimated Ridership', 
         'Buses: % of Comparable Pre-Pandemic Day') %>%
  na.omit() %>%
  # filtering out any dates in the years 2020 and 2023
  filter(!grepl("2023$", Date),
         !grepl("2020$", Date)) %>%
  # mutating date to convert is from a "char" data type
  # creating a new variable that assigns each date their proper day of the week
  mutate("Date" = mdy(Date),
         "Day of Week" = weekdays(Date)) %>%
  select('Day of Week', 'Date', 'Buses: Total Estimated Ridership', 
         'Buses: % of Comparable Pre-Pandemic Day')


# joining the weather and bus data frames
bus_df <-
  bus_df %>%
  # joining by the 'date' and 'datetime' variables
  full_join(weather_df, by = c("Date" = "datetime")) %>%
  mutate(Date = as.Date(Date))

```




### Creation of corrplots to determine if there is any correlation 

```{r}
df_busCorr <- bus_df %>%
  select(`Buses: Total Estimated Ridership`, temp, precip, snowdepth, windspeed) %>%
  cor()
# creating corrplot
corrplot(df_busCorr, method = 'color', tl.cex = 0.9, tl.col = 'black',
order = 'hclust', type = 'upper')



df_busCorr2 <- bus_df %>%
  select(`Buses: Total Estimated Ridership`, tempmin, tempmax, temp, precip, snowdepth, snow, windspeed) %>%
  cor()
# creating corrplot
corrplot(df_busCorr2, method = 'color', tl.cex = 0.9, tl.col = 'black',
order = 'hclust', type = 'upper')
```


```{r}
df_subCorr <- sub_df %>%
  select(`Subways: Total Estimated Ridership`, temp, precip, snowdepth, windspeed) %>%
  cor() 
# creating corrplot
corrplot(df_subCorr, method = 'color', tl.cex = 0.9, tl.col = 'black',
order = 'hclust', type = 'upper')



df_subCorr2 <- sub_df %>%
  select(`Subways: Total Estimated Ridership`, tempmin, tempmax, temp, precip, snowdepth, snow, windspeed) %>%
  cor()
# creating corrplot
corrplot(df_subCorr2, method = 'color', tl.cex = 0.9, tl.col = 'black',
order = 'hclust', type = 'upper')

```







